[include mainsail.cfg]
[include timelapse.cfg]
[include macros.cfg]
[include EBB.cfg]
[include KAMP_Settings.cfg]
#[include ./KAMP/Adaptive_Meshing.cfg]
#[include ./KAMP/Line_Purge.cfg]
#[include ./KAMP/Smart_Park.cfg]

#[include adxlmcu.cfg]

[exclude_object]

[temperature_sensor Pi]
sensor_type: temperature_host

[temperature_sensor MCU]
sensor_type: temperature_mcu

[idle_timeout]
# only turn off heaters and motors if the printer is not paused
gcode:
    {% if not printer.pause_resume.is_paused %}
        TURN_OFF_HEATERS
        M84
    {% endif %}

[input_shaper]
shaper_freq_x: 70.2   #Max 14000mm
shaper_freq_y: 28.4   #Max 2400mm
shaper_type: mzv


[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_0E001F000C50415833323420-if00
canbus_uuid: df8f643798ab
#restart_method: command

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 50000
max_z_velocity: 5
max_z_accel: 100

[cartographer]
#   Path to the serial port for the Cartographer device. Typically has the form
#   /dev/serial/by-id/usb-cartographer_cartographer_...
#   
#   If you are using the CAN Bus version, replace serial: with canbus_uuid: and add the UUID.
canbus_uuid: 410c1e562634
#
speed: 40.
#   Z probing dive speed.
lift_speed: 5.
#   Z probing lift speed.
backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 0.
#   X offset of cartographer from the nozzle.
y_offset: 21.1
#   Y offset of cartographer from the nozzle.
trigger_distance: 2.
#   cartographer trigger distance for homing.
trigger_dive_threshold: 1.5
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
cal_floor: 0.1
#   Minimum z bound on sensor response measurement.
cal_ceil:5.
#   Maximum z bound on sensor response measurement.
cal_speed: 1.0
#   Speed while measuring response curve.
cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
default_model_name: default
#   Name of default cartographer model to load.
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.

[stepper_x]
step_pin: PE6
dir_pin: PA14
enable_pin: !PE0
microsteps: 16
rotation_distance: 40
endstop_pin: EBBCan: PB6
position_endstop: 300
position_max: 300
homing_speed: 75

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PD3
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG11
driver_SGTHRS: 70

[stepper_y]
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
microsteps: 16
rotation_distance: 40
endstop_pin: ^PG6
position_endstop: 300
position_max: 300
homing_speed: 75

[tmc2209 stepper_y]
uart_pin: PE1
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^PG12
driver_SGTHRS: 72

[stepper_z]
step_pin: !PF13
dir_pin: !PF12
enable_pin: !PF14
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8  
microsteps: 32
endstop_pin: probe:z_virtual_endstop # use cartographer as virtual endstop
homing_retract_dist: 0 # cartographer needs this to be set to 0
position_max: 300
position_min: -5
homing_speed: 8.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC4
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Center
[stepper_z1]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PD11
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Front Right
[stepper_z2]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
# Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 8
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PC6
interpolate: False
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0




[safe_z_home]
speed: 100
z_hop: 10
z_hop_speed: 5
home_xy_position: 136,136

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PA2
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
max_power: 0.6
min_temp: -100
max_temp: 1200
control: pid


[bed_mesh]
speed: 150
horizontal_move_z: 10
mesh_min: 15, 15
mesh_max: 200, 200
probe_count: 5,5


[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0




#The following Macro is used to replace the ending gcode in your slicer
#replace the end gcode in your slicer with END_PRINT

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.917
#*# pid_ki = 1.442
#*# pid_kd = 921.489
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 20.740
#*# pid_ki = 1.143
#*# pid_kd = 94.108
#*#
#*#
#*# [bed_mesh p1]
#*# version = 1
#*# points =
#*# 	  -0.156250, -0.148750, -0.163750, -0.142500, -0.102500
#*# 	  0.206250, -0.060000, -0.082500, -0.068750, -0.041250
#*# 	  0.257500, -0.017500, 0.002500, -0.023750, 0.027500
#*# 	  0.305000, 0.053750, 0.033750, -0.008750, 0.055000
#*# 	  0.096250, 0.107500, 0.095000, 0.087500, 0.121250
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 35.26
#*# max_x = 184.74
#*# min_y = 35.21
#*# max_y = 184.77
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.156250, -0.148750, -0.163750, -0.142500, -0.102500
#*# 	  0.206250, -0.060000, -0.082500, -0.068750, -0.041250
#*# 	  0.257500, -0.017500, 0.002500, -0.023750, 0.027500
#*# 	  0.305000, 0.053750, 0.033750, -0.008750, 0.055000
#*# 	  0.096250, 0.107500, 0.095000, 0.087500, 0.121250
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 35.26
#*# max_x = 184.74
#*# min_y = 35.21
#*# max_y = 184.77
